1. Import the public key used by the package management system
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4

2. Create a list file for MongoDB.
for Ubuntu 14.04 : 
echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list
for Ubuntu 16.04 : 
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list

3. Reload local package database.
sudo apt-get update

4. Install the MongoDB packages.
sudo apt-get install -y mongodb-org


### RUN ###
1. Start MongoDB.
sudo service mongod start

2. Verify that MongoDB has started successfully
Verify that the mongod process has started successfully by checking the contents of the log file at /var/log/mongodb/mongod.log for a line reading
Should contain : [initandlisten] waiting for connections on port 27017
<port> is the port the mongod listens on. 
If you modified the net.port setting in the /etc/mongod.conf configuration file, the port may differ.
If you modified the systemLog.path configuration file option, look for the log file at the location you 
specified to that setting. You may see non-critical warnings in the mongod output. 
As long as you see the log line shown above, you can safely ignore these warnings during your initial evaluation of MongoDB.

3. Stop MongoDB.
sudo service mongod stop

4. Restart MongoDB.
sudo service mongod restart

5. Begin using MongoDB.
Start a mongo shell on the same host machine as the mongod. 
Use the --host command line option to specify the localhost address (in this case 127.0.0.1) 
and port that the mongod listens on:
mongo --host 127.0.0.1:27017
